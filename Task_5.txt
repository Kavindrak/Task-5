Q.3) Write a “person” class to hold all the details.


class Person {
    constructor(firstName, lastName, age, gender, email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.gender = gender;
        this.email = email;
    }

    getFullName() {
        return `${this.firstName} ${this.lastName}`;
    }

    getAge() {
        return this.age;
    }

    getGender() {
        return this.gender;
    }

    getEmail() {
        return this.email;
    }

    setFirstName(firstName) {
        this.firstName = firstName;
    }

    setLastName(lastName) {
        this.lastName = lastName;
    }

    setAge(age) {
        this.age = age;
    }

    setGender(gender) {
        this.gender = gender;
    }

    setEmail(email) {
        this.email = email;
    }
}

Output:-
const person1 = new Person("John", "Doe", 30, "Male", "john.doe@example.com");
console.log(person1.getFullName()); // Output: John Doe
console.log(person1.getAge()); // Output: 30
console.log(person1.getGender()); // Output: Male
console.log(person1.getEmail()); // Output: john.doe@example.com

_______________________________________________________________________


Q.4) Write a class to calculate the Uber price.

class UberPriceCalculator {
    constructor(baseFare, costPerMinute, costPerMile, bookingFee) {
        this.baseFare = baseFare;
        this.costPerMinute = costPerMinute;
        this.costPerMile = costPerMile;
        this.bookingFee = bookingFee;
    }

    calculatePrice(distanceInMiles, durationInMinutes) {
        const distanceCost = this.costPerMile * distanceInMiles;
        const durationCost = this.costPerMinute * durationInMinutes;
        const totalFare = this.baseFare + distanceCost + durationCost + this.bookingFee;
        return totalFare;
    }
}
